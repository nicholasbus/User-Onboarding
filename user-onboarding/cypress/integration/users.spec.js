
describe('User onboarding app', () => {
    beforeEach(() => {
        cy.visit('http://localhost:3000')
    })

    const nameInput = () => cy.get('input[name=name]')
    const emailInput = () => cy.get('input[name=email]')
    const passwordInput = () => cy.get('input[name=password]')
    const submitButton = () => cy.get('button')
    const tosCheckbox = () => cy.get('input[name=tos]')
    const userData = () => cy.get('pre')

    // sanity check
    it('check to make sure tests work', () => {
        expect(1 + 1).to.equal(2)
    })

    describe('form inputs and submission', () => {
        it('can change data in the inputs', () => {
            nameInput()
                .should('have.value', '')
                .type('name')
                .should('have.value', 'name')
            emailInput()
                .should('have.value', '')
                .type('email@email.com')
                .should('have.value', 'email@email.com')
            passwordInput()
                .should('have.value', '')
                .type('password')
                .should('have.value', 'password')
            tosCheckbox()
                .should('not.be.checked')
                .check()
                .should('be.checked')
        })

        it('form validation', () => {
            nameInput()
                .should('have.value', '')
            emailInput()
                .should('have.value', '')
            passwordInput()
                .should('have.value', '')
            tosCheckbox()
                .should('not.be.checked')
            submitButton()
                .should('be.disabled')
            nameInput()
                .type('name')
                .should('have.value', 'name')
            emailInput()
                .type('email')
                .should('have.value', 'email')
            passwordInput()
                .type('pass')
                .should('have.value', 'pass')
            tosCheckbox()
                .should('not.be.checked')
            submitButton()
                .should('be.disabled')
            emailInput()
                .type('@email.com')
                .should('have.value', 'email@email.com')
            passwordInput()
                .type('word')
                .should('have.value', 'password')
            tosCheckbox()
                .check()
                .should('be.checked')
            submitButton()
                .should('not.be.disabled')
        })
        
        it('can change data in the inputs and submit', () => {
            userData()
                .should('not.exist')
            submitButton()
                .should('be.disabled')
            nameInput()
                .type('name')
                .should('have.value', 'name')
            emailInput()
                .type('email@email.com')
                .should('have.value', 'email@email.com')
            passwordInput()
                .type('password')
                .should('have.value', 'password')
            tosCheckbox()
                .check()
                .should('be.checked')
            submitButton()
                .should('not.be.disabled')
            submitButton()
                .click()
            userData()
                .should('exist')
        })
        
    })


})
